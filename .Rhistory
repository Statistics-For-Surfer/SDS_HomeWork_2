# Load data ---------------------------------------------------------------
rm(list=ls())
load("~/Documents/GitHub/SDS_HomeWork_2/hw2_data.RData")
View(td_sel)
td <- td_sel$caltech_0051487
View(asd_sel)
asd <- asd_sel$caltech_0051472
td
str(td)
dim(td)
number_of_nodes <- dim(td)[2]
dim(td)[2]
dim(td)
dim(asd)
cor(td)
td$`2001`
cor(td$`2001`, td$`2002`)
td$`2001`
td$`2002`
td$`2002`
td$`2002`
td$`2002`
cor(td$`2001`, td$`2002`)
cor(td$`2001`, td$`2003`)
cor(td$`2001`, td$`2101`)
lapply(td, cor)
lapply(td, cor)
td
lapply(td, cor)
cor
td
cor(td)
len(cor(td)()
len(cor(td)
dim(cor(td))
dim(cor(td))
dim(cor(td))
dim(cor(td)[0])
dim(cor(td))
cor(td)
alpha <- .05
Z_j_k <- (1/2) log((1+cor(td))/(1-cor(td)))
Z_j_k <- (1/2)*log((1+cor(td))/(1-cor(td)))
Z_j_k
Z_j_k
dim(Z_j_k)
g <-  number_of_nodes - 2
install.packages("SIN")
library(SIN)
source("~/Documents/GitHub/SDS_HomeWork_2/main.R", echo=TRUE)
require(SIN)
require(SIN)
Log_upper <- Z_j_k - qnorm(1 - alpha/2) * sqrt(1/ n - g - 3)
n <- dim(td)[1]
D <- dim(td)[2]
g <-  D - 2
Log_upper <- Z_j_k - qnorm(1 - alpha/2) * sqrt(1/ n - g - 3)
sqrt(1/ n - g - 3)
n - g
n - g - 3
sqrt(1/ n - g - 3)
Log_upper <- Z_j_k - qnorm(1 - alpha/2) * sqrt(1/( n - g - 3))
sqrt(1/( n - g - 3))
Log_upper <- Z_j_k - qnorm(1 - alpha/2) * sqrt(1/( n - g - 3))
Log_upper
dim(Log_upper)
Log_lower <- Z_j_k - qnorm(1 - alpha/2) * sqrt(1/( n - g - 3))
Log_upper <- Z_j_k + qnorm(1 - alpha/2) * sqrt(1/( n - g - 3))
exp(3)
(exp(2*Log_lower) - 1 ) /   ((exp(2*Log_lower) + 1))
CIs <- c((exp(2*Log_lower) - 1 ) /   ((exp(2*Log_lower) + 1)) ,  (exp(2*Log_upper) - 1 ) /   ((exp(2*Log_upper) + 1)) )
CIs
dim(CIs)
len(CIs)
?cbind
CIs <-  cbind((exp(2*Log_lower) - 1 ) /   ((exp(2*Log_lower) + 1)) )
CIs
Lower_bound <- (exp(2*Log_lower) - 1 ) /   ((exp(2*Log_lower) + 1))
Upper_bound <-  (exp(2*Log_upper) - 1 ) /   ((exp(2*Log_upper) + 1))
Upper_bound <-(exp(2*Log_upper) - 1 ) /   ((exp(2*Log_upper) + 1))
Upper_bound <- (exp(2*Log_upper) - 1 ) /   ((exp(2*Log_upper) + 1))
Lower_bound
Upper_bound
choose(D, 2)
m <-  choose(D, 2)
bonferroni_alpha <- alpha / m
Z_j_k <- (1/2)*log((1+cor(td))/(1-cor(td)))
Log_lower <- Z_j_k - qnorm(1 - bonferroni_alpha/2) * sqrt(1/( n - g - 3))
Log_upper <- Z_j_k + qnorm(1 - bonferroni_alpha/2) * sqrt(1/( n - g - 3))
Lower_bound <- (exp(2*Log_lower) - 1 ) /   ((exp(2*Log_lower) + 1))
Upper_bound <- (exp(2*Log_upper) - 1 ) /   ((exp(2*Log_upper) + 1))
Lower_bound
Upper_bound
# Idea: Set  a threshold t , if abs(t) is inside the interval ---> put an edge between the two ROI.
t <- .3
Lower_bound
Lower_bound[,3]
dim(Lower_bound[,3])
Lower_bound[,3]
Lower_bound[3,3]
Lower_bound[3,4]
abs(-3)
return(0)
edges <- function( l, u,t){
if (t< 0){
t = -t
}
if (t > l ){
return(0)
}
if (-t < u){
return(0)
}
return(1)
}
adj <- matrix(NA , D, D)
adj
dim(adj)
Lower_bound
Lower_bound[1]
Lower_bound[1,]
Lower_bound[1,1]
Lower_bound[2,1]
edges <- function( l, u,t){
if(l == NaN){
return(0)
}
if (t< 0){
t = -t
}
if (t > l ){
return(0)
}
if (-t < u){
return(0)
}
return(1)
}
is.Nan
is.nan(3)
edges(Lower_bound[2,1] , Upper_bound)
edges(Lower_bound[2,1] , Upper_bound[2,1])
edges(Lower_bound[2,1] , Upper_bound[2,1] , .3)
edges <- function( l, u,t){
if(is.nan(l)){
return(0)
}
if (t< 0){
t = -t
}
if (t > l ){
return(0)
}
if (-t < u){
return(0)
}
return(1)
}
edges(Lower_bound[2,1] , Upper_bound[2,1] , .3)
Lower_bound[2,1]
Upper_bound[2,1]
edges(Lower_bound, Upper_bound)
apply(c(Lower_bound , Upper_bound , .3) , edges )
apply(c(Lower_bound , Upper_bound , .3) , edges )
edges
t <- .3
adj[i,j] <- result
adj <- matrix(NA , D, D)
t <- .3
for ( i in 1:D){
for( j in 1:D){
result <- edges(Lower_bound[i,j] , Upper_bound[i,j], t)
adj[i,j] <- result
}
}
adj
adj <- matrix(NA , D, D)
t <- .9
for ( i in 1:D){
for( j in 1:D){
result <- edges(Lower_bound[i,j] , Upper_bound[i,j], t)
adj[i,j] <- result
}
}
adj
t <- .2
for ( i in 1:D){
for( j in 1:D){
result <- edges(Lower_bound[i,j] , Upper_bound[i,j], t)
adj[i,j] <- result
}
}
adj
t <- .02
for ( i in 1:D){
for( j in 1:D){
result <- edges(Lower_bound[i,j] , Upper_bound[i,j], t)
adj[i,j] <- result
}
}
adj
Lower_bound
edges <- function( l, u,t){
if(is.nan(l)){
return(0)
}
t1 <- -t
t2 <- t
if (t1 > l ){
return(0)
}
if (t2 < u){
return(0)
}
return(1)
}
adj <- matrix(NA , D, D)
t <- .02
for ( i in 1:D){
for( j in 1:D){
result <- edges(Lower_bound[i,j] , Upper_bound[i,j], t)
adj[i,j] <- result
}
}
adj
Lower_bound
Lower_bound[2,1]
Upper_bound[2,1]
Lower_bound[8,6]
Upper_bound[8,6]
bonferroni_alpha <- alpha / m
Z_j_k <- (1/2)*log((1+cor(td))/(1-cor(td)))
g <-  D - 2
Log_lower <- Z_j_k - qnorm(1 - alpha/2) * sqrt(1/( n - g - 3))
Log_upper <- Z_j_k + qnorm(1 - alpha/2) * sqrt(1/( n - g - 3))
Lower_bound <- (exp(2*Log_lower) - 1 ) /   ((exp(2*Log_lower) + 1))
Upper_bound <- (exp(2*Log_upper) - 1 ) /   ((exp(2*Log_upper) + 1))
# Idea: Set  a threshold t , if abs(t) is inside the interval ---> put an edge between the two ROI.
t <- .3
edges <- function( l, u,t){
if(is.nan(l)){
return(0)
}
t1 <- -t
t2 <- t
if (t1 > l ){
return(0)
}
if (t2 < u){
return(0)
}
return(1)
}
Lower_bound[8,6]
Upper_bound[8,6]
adj <- matrix(NA , D, D)
t <- .02
for ( i in 1:D){
for( j in 1:D){
result <- edges(Lower_bound[i,j] , Upper_bound[i,j], t)
adj[i,j] <- result
}
}
adj
Lower_bound[8,6]
Upper_bound[8,6]
Upper_bound[10,8]
Lower_bound[10,8]
Upper_bound[10,8]
t <- .01
for ( i in 1:D){
for( j in 1:D){
result <- edges(Lower_bound[i,j] , Upper_bound[i,j], t)
adj[i,j] <- result
}
}
adj
Lower_bound[10,8]
Upper_bound[10,8]
edges(Lower_bound[10,8],Upper_bound[10,8] , .1 )
t1 <- -t
t2 <- t
t1
l
l = Lower_bound[10,8]
t1 > l
edges <- function( l, u,t){
if(is.nan(l)){
return(0)
}
t1 <- -t
t2 <- t
t1
if (t2 > l ){
return(0)
}
if (t1 < u){
return(0)
}
return(1)
}
edges(Lower_bound[10,8],Upper_bound[10,8] , .1 )
edges(Lower_bound[10,8],Upper_bound[10,8] , .1 )
Lower_bound[10,8]
Upper_bound[10,8]
edges(Lower_bound[10,8],Upper_bound[10,8] , .01 )
Lower_bound[10,8]
l <- Lower_bound[10,8]
u <- Upper_bound[10,8]
t2 > l
t1 < u
td_sel$caltech_0051487$`2001`
hist(td_sel$caltech_0051487$`2001`)
hist(td_sel$caltech_0051492$`2001`)
hist(td_sel$caltech_0051487$`2001`)
hist(td_sel$caltech_0051492$`2001`)
plot(td_sel$caltech_0051487$`2001`)
plot(td_sel$caltech_0051492$`2001` , 'red')
plot(td_sel$caltech_0051492$`2001` , col = 'red')
plot(td_sel$caltech_0051487$`2001`)
plot(td_sel$caltech_0051492$`2001` , col = 'red')
hist(td_sel$caltech_0051487$`2001`)
hist(td_sel$caltech_0051492$`2001` , col = 'red')
hist(td_sel$caltech_0051487$`2001`)
hist(td_sel$caltech_0051492$`2001` , col = 'red')
hist(td_sel$caltech_0051487$`2001`)
td_sel$caltech_0051487$`2001`
hist(td_sel$caltech_0051492$`2001` , col = 'red')
hist(asd_sel$caltech_0051472$`2001`)
hist(asd_sel$trinity_0050234$`2002`)
hist(asd_sel$caltech_0051472$`2001`)
hist(asd_sel$trinity_0050234$`2001`)
hist(asd_sel$caltech_0051472$`2001`)
hist(asd_sel$trinity_0050234$`2001`)
asd_sel$trinity_0050234$`2001`
hist(asd_sel$caltech_0051472$`2001`)
hist(td_sel$caltech_0051492$`2001` , col = 'red')
hist(td_sel$trinity_0050259$`2101`, col = "green")
hist(td_sel$trinity_0050259$`2001`, col = "green")
hist(td_sel$trinity_0050259$`2001`, col = "green")
hist(td_sel$caltech_0051487$`2001`)
td_sel$trinity_0050259$`2001`
hist(td_sel$caltech_0051487$`2001`)
hist(td_sel$trinity_0050259$`2001`, col = "green")
hist(asd_sel$caltech_0051472$`2001`)
hist(td_sel$caltech_0051487$`2001`)
hist(td_sel$caltech_0051492$`2001` , col = 'red')
td_sel$caltech_0051487$`2001`
td_sel$caltech_0051492$`2001`
